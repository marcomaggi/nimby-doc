\input texinfo.tex
@c %**start of header
@setfilename chicken-internals.info
@settitle @sc{CHICKEN} internals
@c %**end of header

@include macros.texi

@c page
@c ------------------------------------------------------------
@c Values.
@c ------------------------------------------------------------

@set TITLE                      @sc{chicken} internals

@c To be used as @value{PACKAGE} whenever we need to include the full
@c name of this package.
@set PACKAGE                    @sc{chicken}

@c To be used as @value{PACKAGE} whenever we need to include the
@c nickname of the project: the name that is used to compose the
@c distribution tarball or the web address.
@set PACKAGE_NICKNAME           mmck-template

@c To be used as @value{AUTHOR} whenever we need to include the list of
@c authors of this document.
@set AUTHOR                     Marco Maggi

@c To be used as @value{AUTHOR_EMAIL} whenever we need to include the
@c email of the *single* author of this document.
@set AUTHOR_EMAIL               @email{marco.maggi-ipsu@@poste.it}

@c To be used as @value{COPYRIGHT_YEARS} whenever we need to include the
@c list of copyright years.
@set COPYRIGHT_YEARS            2019

@set VERSION                    5.0.0

@c page
@c ------------------------------------------------------------
@c Local macros.
@c ------------------------------------------------------------

@macro chicken{}
@sc{chicken}
@end macro

@c page
@c ------------------------------------------------------------
@c Copyright notice.
@c ------------------------------------------------------------

@copying
This document describes the implementation internals of version @value{VERSION} of @value{PACKAGE}:
a Scheme--to--C compiler supporting the language features as defined in the ``Revised^5 Report on
Scheme''.  This is an unofficial document, @strong{not} authored by the @chicken{} development team.

@noindent
Copyright @copyright{} @value{COPYRIGHT_YEARS} by @value{AUTHOR} @value{AUTHOR_EMAIL}

@quotation
Permission is granted to copy, distribute and/or modify this document under the terms of the @gnu{}
Free Documentation License, Version 1.3 or any later version published by the Free Software
Foundation; with Invariant Sections being ``@gnu{} Free Documentation License'' and ``@gnu{} Lesser
General Public License'', no Front--Cover Texts, and no Back--Cover Texts.  A copy of the license is
included in the section entitled ``@gnu{} Free Documentation License''.
@end quotation
@end copying

@c page
@c ------------------------------------------------------------
@c Headers.
@c ------------------------------------------------------------

@titlepage
@title @value{TITLE}
@subtitle Revision @value{VERSION}
@author @value{AUTHOR} @value{AUTHOR_EMAIL}
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c ------------------------------------------------------------

@ifinfo
@dircategory Development
@direntry
* chicken-internals: (chicken-internals).   @chicken{} internals documentation.
@end direntry
@end ifinfo

@c ------------------------------------------------------------

@ignore
@syncodeindex tp cp
@syncodeindex vr cp
@syncodeindex fn cp
@end ignore

@c page
@ifnottex
@node Top
@top @value{TITLE}

@insertcopying

@menu
* overview::                    Overview of the document.
* slots::                       Slots operations.

Appendices

* Documentation License::       GNU Free Documentation License.
* references::                  Bibliography and references.

Indexes

* concept index::               An entry for each concept.
* function index::              An entry for each function.
* variable index::              An entry for each variable.
* type index::                  An entry for each type.
@end menu
@end ifnottex

@c page
@node overview
@chapter Overview of the document


This document describes the implementation internals of version @value{VERSION} of @value{PACKAGE}:
a Scheme--to--C compiler supporting the language features as defined in the ``Revised^5 Report on
Scheme''.  This is an unofficial document, @strong{not} authored by the @chicken{} development team.

@c page
@node slots
@chapter Slots operations


@deffn {System Operation} {##sys#slot} @qvar{vector} @qvar{slot-index}
Unsafe implementation of @func{vector-ref}.  We can use it when we know that: @qvar{vector} is a
vector object; @qvar{slot-index} is a valid slot index for @qvar{vector}.  Return the undefined
value.
@end deffn


@deffn {System Operation} {##sys#setslot} @qvar{vector} @qvar{slot-index} @qvar{new-value}
Unsafe implementation of @func{vector-ref}.  We can use it when we know that: @qvar{vector} is a
vector object; @qvar{slot-index} is a valid slot index for @qvar{vector}.  Return the undefined
value.
@end deffn


@deffn {System Operation} {##sys#setislot} @qvar{vector} @qvar{slot-index} @qvar{new-immediate-value}
Like @syntax{##sys#setslot}, it is an unsafe implementation of @func{vector-ref} with an additional
constraint on the new value.  We can use it when we know that: @qvar{vector} is a vector object;
@qvar{slot-index} is a valid slot index for @qvar{vector}; @qvar{new-immediate-value} is any
immediate Scheme value (examples: a fixnum, a boolean).  Return the undefined value.
@end deffn


@deffn {System Operation} {##sys#size} @qvar{vector}
Unsafe implementation of @func{vector-length}.  We can use it when we know that: @qvar{vector} is a
vector object.
@end deffn


We could make the use of the above operations a bit more descriptive by using the following macros:

@lisp
(define-syntax-rule ($vector-ref ?vector ?slot-index)
  (##sys#slot ?vector ?slot-index))

(define-syntax-rule ($vector-set! ?vector ?slot-index ?new-value)
  (##sys#setslot ?vector ?slot-index ?new-value))

(define-syntax-rule ($vector-length ?vector)
  (##sys#size ?vector))
@end lisp

@c page
@c ------------------------------------------------------------
@c Appendices.
@c ------------------------------------------------------------

@include fdl-1.3.texi

@c page
@node references
@appendix Bibliography and references


The home page of @value{PACKAGE} is:

@center @url{http://www.call-cc.org/}

@c page
@node concept index
@appendix An entry for each concept

@printindex cp

@node function index
@appendix An entry for each function.

@printindex fn

@node variable index
@appendix An entry for each variable.

@printindex vr

@node type index
@appendix An entry for each type.

@printindex tp

@contents
@bye

@c end of file
@c Local Variables:
@c mode: texinfo
@c TeX-master: t
@c ispell-local-dictionary: "en_GB-ise-w_accents"
@c End:
